digraph "src/game/ui/ConsoleUi.cpp"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="src/game/ui/ConsoleUi.cpp",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="ConsoleUi.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dc1/_console_ui_8hpp.html",tooltip="Declares the ConsoleUi class which provides a console-based user interface for the Game."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="../Game.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d07/_game_8hpp.html",tooltip="Declaration of the Game class for managing Solitaire game logic, including card columns,..."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Deck.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d31/_deck_8hpp.html",tooltip=" "];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="util/common.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d3a/common_8hpp.html",tooltip="Includes standard and project-specific headers for memory allocation, assertions, and hashing utiliti..."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="iostream",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node5 -> Node7 [id="edge6_Node000005_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="allocator.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d61/allocator_8hpp.html",tooltip="Provides debug memory allocation tracking on Windows in debug mode."];
  Node5 -> Node8 [id="edge7_Node000005_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="assert.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d54/assert_8hpp.html",tooltip="Custom assertion macro for debug builds."];
  Node8 -> Node6 [id="edge8_Node000008_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node9 [id="edge9_Node000005_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="hash.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d04/hash_8hpp.html",tooltip=" "];
  Node9 -> Node10 [id="edge10_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="string",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node9 -> Node11 [id="edge11_Node000009_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="string_view",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node4 -> Node12 [id="edge12_Node000004_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="Card.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d73/_card_8hpp.html",tooltip="Defines playing card related enums and the Card class representing a single playing card."];
  Node12 -> Node13 [id="edge13_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="util/fs.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d68/fs_8hpp.html",tooltip="Provides BufferedFileIO."];
  Node13 -> Node5 [id="edge14_Node000013_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node14 [id="edge15_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="fstream",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node13 -> Node15 [id="edge16_Node000013_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="vector",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node13 -> Node16 [id="edge17_Node000013_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="cstdint",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node13 -> Node6 [id="edge18_Node000013_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node17 [id="edge19_Node000013_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="cstdlib",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node13 -> Node18 [id="edge20_Node000013_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="filesystem",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node4 -> Node19 [id="edge21_Node000004_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="algorithm",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node4 -> Node20 [id="edge22_Node000004_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="random",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node4 -> Node15 [id="edge23_Node000004_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node12 [id="edge24_Node000003_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node5 [id="edge25_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node15 [id="edge26_Node000003_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node21 [id="edge27_Node000001_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="locale",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node6 [id="edge28_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node15 [id="edge29_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node10 [id="edge30_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node22 [id="edge31_Node000001_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="../util/MultiLineWString\lBuilder.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d3a/_multi_line_w_string_builder_8hpp.html",tooltip="Provides a class to build multi-line wide strings with ANSI color codes per character."];
  Node22 -> Node10 [id="edge32_Node000022_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node15 [id="edge33_Node000022_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node6 [id="edge34_Node000022_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node23 [id="edge35_Node000022_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="regex",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node1 -> Node24 [id="edge36_Node000001_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="../util/colorUtil.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/dda/color_util_8hpp.html",tooltip="Utility functions and constants for ANSI terminal color codes (RGB and styles)."];
  Node24 -> Node10 [id="edge37_Node000024_Node000010",color="steelblue1",style="solid",tooltip=" "];
}
