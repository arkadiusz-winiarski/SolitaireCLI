digraph "ConsoleUi::draw"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="ConsoleUi::draw",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Draws the current state of the game to the console."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Game::getColumn",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d1f/class_game.html#a8ab101a845743749496084ddedf85284",tooltip="Gets a reference to a column of cards."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Game::getPile",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d1f/class_game.html#afeef56ba3692626312ee805de3e5483f",tooltip="Gets the pile of drawn cards."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Game::getReserveSlot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d1f/class_game.html#a451d6e60b6a27bbb3aa75916e3a43c4c",tooltip="Gets a reserve slot card by index."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Card::isValid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d6a/class_card.html#a8a05ca808aae1e9aa54f5525672be650",tooltip="Checks if the card is valid (properly initialized)."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="MultiLineWStringBuilder::set",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d6b/class_multi_line_w_string_builder.html#a2d450ea3e7457123e047455cb8135064",tooltip="Sets a substring starting at position (x, y) with optional embedded ANSI color codes."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="MultiLineWStringBuilder::str",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d6b/class_multi_line_w_string_builder.html#a3af79e57b2aff0d9a03e024023087c67",tooltip="Converts the stored lines and color layers into a single wide string with embedded ANSI codes."];
  Node1 -> Node7 [id="edge7_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="WindowsConsole::WriteWString\lToConsole",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc2/namespace_windows_console.html#afcfbd1b378b5776b5f7c837940c09f7a",tooltip="Writes a wide-character string (std::wstring) directly to the Windows console."];
}
