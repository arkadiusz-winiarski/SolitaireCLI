digraph "ConsoleUi::drawMenu"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="ConsoleUi::drawMenu",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Draws main menu of a game."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="WindowsConsole::clear",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc2/namespace_windows_console.html#a67be92bb05bb53af96b4b3ff547d3666",tooltip="Clears the entire Windows console screen using cls."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="BufferedIO::fileExists",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d78/namespace_buffered_i_o.html#aa4be2211b2982600f9cce6b783285a20",tooltip="Checks if a file exists."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="ColorUtil::getRainbowColor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dbf/namespace_color_util.html#aab9b80e2e76e76817d214923195559bc",tooltip="Generates a rainbow RGB color based on a tick value."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="ColorUtil::HSVtoRGB",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dbf/namespace_color_util.html#a9c3b01c55c80e9b3e9d60ea4b31dba7a",tooltip="Converts HSV color to RGB color."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="BufferedIO::isValidFilename",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d78/namespace_buffered_i_o.html#ad6b283ed0db8e444d0d08b44109475db",tooltip="Checks if a given filename string is valid for saving a file."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="WindowsConsole::processConsole\lInput",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc2/namespace_windows_console.html#ae57e04d610e420b4bbe050a95116c77b",tooltip="Processes available console input events asynchronously, updating the input buffer."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="WindowsConsole::wideChar\lToUtf8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc2/namespace_windows_console.html#aa99f704c460342cccef8980fb8453db0",tooltip="Converts a wide character to a UTF-8 encoded std::string."];
  Node7 -> Node9 [id="edge8_Node000007_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="WindowsConsole::WriteWString\lToConsole",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc2/namespace_windows_console.html#afcfbd1b378b5776b5f7c837940c09f7a",tooltip="Writes a wide-character string (std::wstring) directly to the Windows console."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="Game::readFileGame",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d1f/class_game.html#ae8078e428ab9e024d30ad236a8d924e8",tooltip=" "];
  Node10 -> Node11 [id="edge10_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="BufferedIO::BufferedFile\lReader::isOpen",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d4c/class_buffered_i_o_1_1_buffered_file_reader.html#a8132b6118ce8b36fb3a4a40374ddfd10",tooltip="Checks if the file was successfully opened."];
  Node10 -> Node12 [id="edge11_Node000010_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="BufferedIO::BufferedFile\lReader::read",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d4c/class_buffered_i_o_1_1_buffered_file_reader.html#a6131eeac2e29dd736ead9e40e16cc27f",tooltip="Reads up to maxBytes bytes into data buffer."];
  Node10 -> Node13 [id="edge12_Node000010_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="Card::readCard",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d6a/class_card.html#a96352e98d21a81a7627c5975d0abfd99",tooltip="Writes card into buffered reader."];
  Node13 -> Node14 [id="edge13_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="BufferedIO::BufferedFile\lReader::readBool",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d4c/class_buffered_i_o_1_1_buffered_file_reader.html#a1350750b1541a49a9670a370f5b5c3eb",tooltip="Reads a boolean value from the file."];
  Node13 -> Node15 [id="edge14_Node000013_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="BufferedIO::BufferedFile\lReader::readInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d4c/class_buffered_i_o_1_1_buffered_file_reader.html#a342c70ac02f5f268443c37f1775aedb9",tooltip="Reads a 32-bit integer from the file."];
  Node10 -> Node15 [id="edge15_Node000010_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node16 [id="edge16_Node000010_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="Deck::setCards",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/deb/class_deck.html#a7dfc7eb3605af2e0327060de581c1e9b",tooltip=" "];
  Node1 -> Node17 [id="edge17_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="Game::reset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d1f/class_game.html#a39bb2fd26b5ea6b164f28f9f6723582e",tooltip="Resets the game, shuffling the deck and clearing all piles."];
  Node17 -> Node18 [id="edge18_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="Game::start",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d1f/class_game.html#a3d9b98f7c4a96ecf578f75b96c9f0e90",tooltip="Starts a new game by dealing cards to columns."];
  Node18 -> Node19 [id="edge19_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="Deck::drawCard",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/deb/class_deck.html#a7e3cb5a726dec9953c564ab7d780563d",tooltip="Draws the top card from the deck."];
  Node19 -> Node20 [id="edge20_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="Deck::isEmpty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/deb/class_deck.html#a8be1adfe1570078e63e05a7ef995625a",tooltip="Checks if the deck is empty."];
  Node1 -> Node21 [id="edge21_Node000001_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="MultiLineWStringBuilder::set",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d6b/class_multi_line_w_string_builder.html#a2d450ea3e7457123e047455cb8135064",tooltip="Sets a substring starting at position (x, y) with optional embedded ANSI color codes."];
  Node21 -> Node22 [id="edge22_Node000021_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="MultiLineWStringBuilder::str",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d6b/class_multi_line_w_string_builder.html#a3af79e57b2aff0d9a03e024023087c67",tooltip="Converts the stored lines and color layers into a single wide string with embedded ANSI codes."];
  Node1 -> Node23 [id="edge23_Node000001_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="WindowsConsole::setCursor\lPosition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/dc2/namespace_windows_console.html#a804050df52db62f2631a7b81911991d1",tooltip="Sets the console cursor position to the specified coordinates."];
  Node1 -> Node22 [id="edge24_Node000001_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node24 [id="edge25_Node000001_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="ColorUtil::wrgbToForeground",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dbf/namespace_color_util.html#a67c141f823d384c3ee2f04c9728a300a",tooltip="Converts an RGB color to an ANSI escape sequence for foreground color (std::wstring)."];
  Node1 -> Node9 [id="edge26_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
}
